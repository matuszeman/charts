suite: configs-sealedsecrets
templates:
  - configs.yaml
  - deployment.yaml
values:
  - values/minimum.yaml
tests:
  - it: when sealedSecret is specified (with content too), then generate SealedSecret, do not generate ConfigMap
    values:
      - values/deployment.yaml
    set:
      containers:
        app:
          configDirs:
            sealed-secret: /sealed-secret
          configFiles:
            sealed-secret:
              key1: /tmp/secret.txt

      configs:
        sealed-secret:
          annotations:
            some: annotation
          sealedSecret:
            scope: namespace-wide
            encryptedData:
              key1: encryptedvalue
          content:
            example.txt: example content
    asserts:
      - matchSnapshot:
          template: configs.yaml
  - it: when sealedSecret with scope is specified, then set it to SealedSecret
    set:
      configs:
        sealed-secret:
          sealedSecret:
            scope: namespace-wide
            encryptedData:
              key1: encryptedvalue
    asserts:
      - isSubset:
          path: metadata.annotations
          content:
            sealedsecrets.bitnami.com/namespace-wide: "true"
        template: configs.yaml
        documentIndex: 0
  - it: when restartPodOnUpdate, then generate Deployment pod with config annotation
    values:
      - values/deployment.yaml
    set:
      configs:
        # below should be added to pod annotations
        sealed-secret:
          restartPodOnUpdate: true
          sealedSecret:
            encryptedData:
              key1: encryptedvalue
    asserts:
      - equal:
          path: spec.template.metadata.annotations
          value:
            config-sealed-secret-hash: 11fd718
        template: deployment.yaml
        documentIndex: 0
  - it: when sealed secret with annotations
    set:
      configs:
        sealed-secret:
          annotations:
            some: annotation
          sealedSecret:
            encryptedData:
              key1: encryptedvalue1
    asserts:
      - equal:
          path: metadata.annotations
          value:
            some: annotation
        template: configs.yaml
        documentIndex: 0
  - it: when sealedSecret with NO scope, then do not set it to SealedSecret
    set:
      configs:
        sealed-secret:
          sealedSecret:
            #scope: namespace-wide
            encryptedData:
              key1: encryptedvalue1
    asserts:
      - notExists:
          path: metadata.annotations
        template: configs.yaml
        documentIndex: 0
      - notExists:
          path: spec.template.metadata.annotations
        template: configs.yaml
        documentIndex: 0