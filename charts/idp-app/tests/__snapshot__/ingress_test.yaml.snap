should match snapshot with values-ci.yaml:
  1: |
    apiVersion: v1
    data:
      SCRIPT_FILENAME: /html$fastcgi_script_name
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME-resource-suffix-ingress-fcgi
  2: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: default
        nginx.ingress.kubernetes.io/auth-realm: Authentication Required
        nginx.ingress.kubernetes.io/auth-secret: test-basic-auth
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/backend-protocol: FCGI
        nginx.ingress.kubernetes.io/enable-access-log: "true"
        nginx.ingress.kubernetes.io/fastcgi-index: index.php
        nginx.ingress.kubernetes.io/fastcgi-params-configmap: RELEASE-NAME-resource-suffix-ingress-fcgi
        nginx.ingress.kubernetes.io/rewrite-target: /api/$2
        nginx.ingress.kubernetes.io/use-regex: true
      labels:
        app.kubernetes.io/instance: RELEASE-NAME-resource-suffix
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app-name
        app.kubernetes.io/version: 0.1.0
      name: RELEASE-NAME-resource-suffix
    spec:
      ingressClassName: nginx-external
      rules:
        - host: test.example.com
          http:
            paths:
              - backend:
                  service:
                    name: RELEASE-NAME-resource-suffix
                    port:
                      name: app
                path: /somepath(/|$)(.*)
                pathType: ImplementationSpecific
      tls:
        - hosts:
            - test.example.com
          secretName: RELEASE-NAME-resource-suffix-ingress-tls
when ingress and ingresses are set:
  1: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: default
        nginx.ingress.kubernetes.io/enable-access-log: "true"
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app-name
        app.kubernetes.io/version: 0.1.0
      name: RELEASE-NAME
    spec:
      ingressClassName: nginx-external
      rules:
        - host: testapp-default.example.com
          http:
            paths:
              - backend:
                  service:
                    name: RELEASE-NAME
                    port:
                      name: app
                path: /
                pathType: ImplementationSpecific
      tls:
        - hosts:
            - testapp-default.example.com
          secretName: RELEASE-NAME-ingress-tls
  2: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: default
        nginx.ingress.kubernetes.io/auth-response-headers: Auth-Proxy-Email,Auth-Proxy-Groups
        nginx.ingress.kubernetes.io/auth-signin: https://auth.example.com/oauth2/start?rd=https://$host$request_uri
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Host testapp-external.example.com;
        nginx.ingress.kubernetes.io/auth-url: https://auth.example.com/oauth2/auth?allowed_groups=one@example.com
        nginx.ingress.kubernetes.io/enable-access-log: "true"
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app-name
        app.kubernetes.io/version: 0.1.0
      name: RELEASE-NAME-external
    spec:
      ingressClassName: nginx-external
      rules:
        - host: testapp-external.example.com
          http:
            paths:
              - backend:
                  service:
                    name: RELEASE-NAME
                    port:
                      name: app
                path: /
                pathType: ImplementationSpecific
      tls:
        - hosts:
            - testapp-external.example.com
          secretName: RELEASE-NAME-external-ingress-tls
  3: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: default
        nginx.ingress.kubernetes.io/auth-realm: Authentication Required
        nginx.ingress.kubernetes.io/auth-secret: basic-auth
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/enable-access-log: "false"
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app-name
        app.kubernetes.io/version: 0.1.0
      name: RELEASE-NAME-internal
    spec:
      ingressClassName: nginx-internal
      rules:
        - host: testapp-internal.example.com
          http:
            paths:
              - backend:
                  service:
                    name: RELEASE-NAME
                    port:
                      name: app
                path: /
                pathType: ImplementationSpecific
      tls:
        - hosts:
            - testapp-internal.example.com
          secretName: RELEASE-NAME-internal-ingress-tls
when multi deployment:
  1: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: default
        nginx.ingress.kubernetes.io/enable-access-log: "true"
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app-name
        app.kubernetes.io/version: 0.1.0
      name: RELEASE-NAME-one
    spec:
      ingressClassName: nginx-internal
      rules:
        - host: one.example.com
          http:
            paths:
              - backend:
                  service:
                    name: RELEASE-NAME-one
                    port:
                      name: app
                path: /
                pathType: ImplementationSpecific
      tls:
        - hosts:
            - one.example.com
          secretName: RELEASE-NAME-one-ingress-tls
  2: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: default
        nginx.ingress.kubernetes.io/enable-access-log: "true"
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app-name
        app.kubernetes.io/version: 0.1.0
      name: RELEASE-NAME-two
    spec:
      ingressClassName: nginx-internal
      rules:
        - host: two.example.com
          http:
            paths:
              - backend:
                  service:
                    name: RELEASE-NAME-two
                    port:
                      name: app
                path: /
                pathType: ImplementationSpecific
      tls:
        - hosts:
            - two.example.com
          secretName: RELEASE-NAME-two-ingress-tls
when oauth2ProxyAuth is enabled on path:
  1: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: default
        nginx.ingress.kubernetes.io/auth-response-headers: Auth-Proxy-Email,Auth-Proxy-Groups
        nginx.ingress.kubernetes.io/auth-signin: https://$host/oauth2/start?rd=https://$host$request_uri
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Host testapp.example.com;
        nginx.ingress.kubernetes.io/auth-url: https://$host/oauth2/auth
        nginx.ingress.kubernetes.io/enable-access-log: "true"
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app-name
        app.kubernetes.io/version: 0.1.0
      name: RELEASE-NAME
    spec:
      ingressClassName: nginx-internal
      rules:
        - host: testapp.example.com
          http:
            paths:
              - backend:
                  service:
                    name: RELEASE-NAME
                    port:
                      name: app
                path: /
                pathType: ImplementationSpecific
      tls:
        - hosts:
            - testapp.example.com
          secretName: RELEASE-NAME-ingress-tls
  2: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app-name
        app.kubernetes.io/version: 0.1.0
      name: RELEASE-NAME-oauth2-proxy
    spec:
      ingressClassName: nginx-internal
      rules:
        - host: testapp.example.com
          http:
            paths:
              - backend:
                  service:
                    name: my-oauth2-proxy
                    port:
                      number: 80
                path: /oauth2
                pathType: Prefix
      tls:
        - hosts:
            - testapp.example.com
          secretName: RELEASE-NAME-ingress-tls
when oauth2ProxyAuth is enabled on url:
  1: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: default
        nginx.ingress.kubernetes.io/auth-response-headers: Auth-Proxy-Email,Auth-Proxy-Groups
        nginx.ingress.kubernetes.io/auth-signin: https://auth.example.com/oauth2/start?rd=https://$host$request_uri
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Host testapp.example.com;
        nginx.ingress.kubernetes.io/auth-url: https://auth.example.com/oauth2/auth?allowed_groups=one@example.com,two@example.com
        nginx.ingress.kubernetes.io/enable-access-log: "true"
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app-name
        app.kubernetes.io/version: 0.1.0
      name: RELEASE-NAME
    spec:
      ingressClassName: nginx-internal
      rules:
        - host: testapp.example.com
          http:
            paths:
              - backend:
                  service:
                    name: RELEASE-NAME
                    port:
                      name: app
                path: /
                pathType: ImplementationSpecific
      tls:
        - hosts:
            - testapp.example.com
          secretName: RELEASE-NAME-ingress-tls
when oauth2ProxyAuth with externalUrl:
  1: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: default
        nginx.ingress.kubernetes.io/auth-response-headers: Auth-Proxy-Email,Auth-Proxy-Groups
        nginx.ingress.kubernetes.io/auth-signin: https://auth.example.com/oauth2/start?rd=https://$host$request_uri
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Host testapp.example.com;
        nginx.ingress.kubernetes.io/auth-url: http://oauth2proxy.devsup.svc.cluster.local/oauth2/auth
        nginx.ingress.kubernetes.io/enable-access-log: "true"
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: app-name
        app.kubernetes.io/version: 0.1.0
      name: RELEASE-NAME
    spec:
      ingressClassName: nginx-internal
      rules:
        - host: testapp.example.com
          http:
            paths:
              - backend:
                  service:
                    name: RELEASE-NAME
                    port:
                      name: app
                path: /
                pathType: ImplementationSpecific
      tls:
        - hosts:
            - testapp.example.com
          secretName: RELEASE-NAME-ingress-tls
